apply plugin: 'java'

import jsettlers.shaders.compile.ShaderCompilationTask

String[] variants = new String[] {
		"natives-linux",
		"natives-macos",
		"natives-windows",
		"natives-windows-x86"
};

String[] modules = new String[] {
		"lwjgl",
		"lwjgl-opengl",
		"lwjgl-openal",
		"lwjgl-glfw",
		"lwjgl-vma",
}

dependencies {
	implementation project(':go.graphics')

	def lwjglVersion = rootProject.ext.lwjglVersion

	for(String module : modules) {
		implementation "org.lwjgl:" + module + ":" + lwjglVersion

		for(String variant : variants) {
			runtimeOnly "org.lwjgl:" + module + ":" + lwjglVersion + ":" + variant
		}
	}

	implementation "org.lwjgl:lwjgl-vulkan:" + lwjglVersion
	implementation "org.lwjgl:lwjgl-egl:" + lwjglVersion
	implementation "org.lwjgl:lwjgl-jawt:" + lwjglVersion

	implementation "org.joml:joml:1.9.17"


	// macos support
	implementation "org.jogamp.gluegen:gluegen-rt:2.3.2"
	implementation "org.jogamp.jogl:jogl-all:2.3.2"
	runtimeOnly "org.jogamp.gluegen:gluegen-rt:2.3.2:natives-macosx-universal"
	runtimeOnly "org.jogamp.jogl:jogl-all:2.3.2:natives-macosx-universal"


    /*add music dependencies
     * ogg libraries: vorbisspi1.0.2.jar, tritonus_share.jar, jorbis-0.0.15.jar, jogg-0.0.7.jar
     * mp3 libraries: jl1.0.1.jar, tritonus_share.jar, mp3spi1.9.5.jar
     */
	/* disabled for now
	runtimeOnly "javazoom:jlayer:1.0.1"
    runtimeOnly "com.googlecode.soundlibs:tritonus-share:0.3.7.4"
	runtimeOnly "com.googlecode.soundlibs:mp3spi:1.9.5.4"
	runtimeOnly "com.googlecode.soundlibs:vorbisspi:1.0.3.3"
	runtimeOnly "org.jcraft:jorbis:0.0.17"
	runtimeOnly "de.jarnbjo:j-ogg-all:1.0.0"*/
}

def shaderDefinitionDir = 'src/main/glsl/'
def shaderJavaOutputDir = 'src/generated/java'
def shaderResOutputDir = 'src/generated/resources'

sourceSets {
	main.java.srcDirs += [shaderJavaOutputDir]
	main.resources.srcDirs += [shaderResOutputDir]
}

clean {
	delete file(shaderJavaOutputDir)
	delete file(shaderResOutputDir)
}

task compileShaders(type: ShaderCompilationTask) {
	inputDirectory = file(shaderDefinitionDir).toPath()
	generatedSourcesDirectory = file(shaderJavaOutputDir).toPath()
	generatedResourcesDirectory = file(shaderResOutputDir).toPath()
}

compileJava {
	dependsOn compileShaders
}

copyMainResources {
	dependsOn compileShaders
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}
